from django.contrib.auth import get_user_model
from django.db import models
from django.utils.text import slugify

from petstagram.core.models import IHaveUser

# null means it might be 'null' in our DB, depending on option chosen ('True'/'False')
# blank means we can give him an empty string, depending on option chosen ('True'/'False')

UserModel = get_user_model()


class Pet(IHaveUser, models.Model):
    MAX_NAME_LENGTH = 30
    MAX_PET_PHOTO_LENGTH = 500

    name = models.CharField(
        max_length=MAX_NAME_LENGTH,
        null=False,
        blank=False,
    )

    pet_photo = models.URLField(
        null=False,
        blank=False,
        max_length=MAX_PET_PHOTO_LENGTH,
    )

    date_of_birth = models.DateField(
        null=True,
        blank=True,
    )  # 'True' because it is an optional parameter

    slug = models.SlugField(
        unique=True,
        null=False,
        blank=True,
        editable=False,
    )  # null=False and blank=True is typically used for autogenerated stuff

    # We removed this because we add IHaveUser in the model:
    # user = models.ForeignKey(
    #     UserModel,
    #     on_delete=models.RESTRICT,
    # )

    def __str__(self):
        return self.name

    def save(self, *args, **kwargs):
        super().save(*args, **kwargs)  # we add it here, to be sure it generates a pk for the slug, instead of 'None'
        if not self.slug:  # slugify("My name") -> "My-name"
            self.slug = slugify(f'{self.name}-{self.pk}')

        super().save(*args, **kwargs)

